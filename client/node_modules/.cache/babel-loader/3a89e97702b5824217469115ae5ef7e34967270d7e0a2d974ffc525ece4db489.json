{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\OneDrive - Ulster University\\\\Desktop\\\\CinemaWebsite\\\\client\\\\src\\\\components\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport NavLink from \"react-bootstrap/esm/NavLink\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetailsPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    getMovieDetails();\n  });\n  const getMovieDetails = async () => {\n    try {\n      const resp = fetch('/movies/:movieId');\n      const data = await resp.json();\n      setMovie(data);\n    } catch (error) {\n      console.log(\"Error retreiving movie: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movie-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w300/${movie.poster_path}`,\n          alt: \"movie poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: movie.Released\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: movie.Genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [movie.imdbRating, \" / 10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: movie.Country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          className: \"back-btn\",\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieDetailsPage, \"2DI+WM1NP8orkt5lpnG0LvHIzCE=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetailsPage;\nexport default MovieDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","NavLink","jsxDEV","_jsxDEV","MovieDetailsPage","_s","id","movie","setMovie","getMovieDetails","resp","fetch","data","json","error","console","log","className","children","src","poster_path","alt","fileName","_jsxFileName","lineNumber","columnNumber","Title","Released","Genre","imdbRating","Country","to","_c","$RefreshReg$"],"sources":["C:/Users/Kevin/OneDrive - Ulster University/Desktop/CinemaWebsite/client/src/components/MovieDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport NavLink from \"react-bootstrap/esm/NavLink\";\r\n\r\nconst MovieDetailsPage = () => {\r\n    const { id } = useParams();\r\n    const [movie, setMovie] = useState(null);\r\n\r\n    useEffect(() => {\r\n    getMovieDetails()\r\n    })\r\n\r\n    const getMovieDetails = async ()=>{\r\n        try {\r\n            const resp = fetch('/movies/:movieId');\r\n            const data = await resp.json();\r\n            setMovie(data);\r\n        }\r\n        catch (error) {\r\n            console.log(\"Error retreiving movie: \", error)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    return (\r\n        <section className=\"movie-section\">\r\n            <div className=\"movie-card\">\r\n                <figure>\r\n                    <img src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`} alt=\"movie poster\" />\r\n                </figure>\r\n                <div className=\"card-content\">\r\n                    <p className=\"title\">{movie.Title}</p>\r\n                    <p className=\"\"></p>\r\n                    <p className=\"card-text\">{movie.Released}</p>\r\n                    <p className=\"card-text\">{movie.Genre}</p>\r\n                    <p className=\"card-text\">{movie.imdbRating} / 10</p>\r\n                    <p className=\"card-text\">{movie.Country}</p>\r\n                    <NavLink to=\"/\" className=\"back-btn\">\r\n                        Go Back\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default MovieDetailsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}