{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nconst MovieList = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [current_Page, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const fetchMovies = async (page = 1) => {\n    try {\n      const {\n        data\n      } = await fetch(`/search?query=${query}`, {\n        params: {\n          query,\n          page\n        }\n      });\n      setMovies(data.results);\n      setTotalPages(data.total_pages);\n      setCurrentPage(data.current_Page);\n    } catch (error) {\n      console.error(\"Error fetching movies:\", error);\n    }\n  };\n  const getSearchedMovie = async () => {\n    try {\n      const resp = await fetch(`/search?query=${query}&page=${currentPage}`);\n      const data = await resp.json();\n      setMovies(data);\n    } catch (error) {\n      console.log(\"Error retreiving list of movies:\", error);\n    }\n  };\n  useEffect(() => {\n    getSearchedMovie();\n  }, [query]);\n\n  // return (\n  //     <>\n  //         <div>\n  //             {(typeof movies === 'undefined' || movies === null) ?\n  //                 (<p>Loading...</p>) :\n  //                 (\n  //                     <div className=\"background_container\">\n  //                         <h2>Search Query: <b>{query}</b></h2>\n  //                         <div className=\"flex-container\">\n  //                             {movies.map((movie) => (\n  //                                 <div key={movie.id} className=\"movie_item\">\n  //                                     <img\n  //                                         src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n  //                                         alt=\"movie poster\"\n  //                                         className=\"movie-poster\"\n  //                                     />\n\n  //                                     <div className=\"movie_name\">\n  //                                         <Link to={`/movies/${movie.id}`} className=\"movie-link\">\n  //                                             {movie.original_title ? movie.original_title : movie.name}\n  //                                         </Link>\n  //                                     </div>\n  //                                 </div>\n\n  //                             ))}\n  //                         </div>\n  //                         <div className=\"pagination\">\n  //                             <button\n  //                                 disabled={currentPage === 1}\n  //                                 onClick={() => setCurrentPage((prev) => prev - 1)}>Previous</button>\n  //                             <span>Page {currentPage} of {totalPages}</span>\n  //                             <button\n  //                                 disabled={currentPage === totalPages}\n  //                                 onClick={() => setCurrentPage((prev) => prev + 1)}>Next</button>\n  //                         </div>\n  //                     </div>\n\n  //                 )};\n\n  //         </div>\n  //     </>\n  // );\n};\n_s(MovieList, \"aW9HxEOSBXM0r6B/Ne0l+lEHtq4=\", false, function () {\n  return [useSearchParams];\n});\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","useSearchParams","Link","MovieList","_s","movies","setMovies","searchParams","query","get","current_Page","setCurrentPage","totalPages","setTotalPages","fetchMovies","page","data","fetch","params","results","total_pages","error","console","getSearchedMovie","resp","currentPage","json","log","_c","$RefreshReg$"],"sources":["C:/Users/Kevin/OneDrive - Ulster University/Desktop/CinemaWebsite/client/src/components/MovieSearchResults.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSearchParams, Link } from 'react-router-dom';\r\n\r\n\r\nconst MovieList = () => {\r\n    const [movies, setMovies] = useState([])\r\n    const [searchParams] = useSearchParams();\r\n    const query = searchParams.get('query');\r\n    const [current_Page, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n\r\n    const fetchMovies = async (page = 1) => {\r\n        try {\r\n            const { data } = await fetch(`/search?query=${query}`, {\r\n                params: { query, page },\r\n            });\r\n            setMovies(data.results);\r\n            setTotalPages(data.total_pages);\r\n            setCurrentPage(data.current_Page);\r\n        } catch (error) {\r\n            console.error(\"Error fetching movies:\", error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const getSearchedMovie = async () => {\r\n        try {\r\n            const resp = await fetch(`/search?query=${query}&page=${currentPage}`);\r\n            const data = await resp.json();\r\n            setMovies(data);\r\n        } catch (error) {\r\n            console.log(\"Error retreiving list of movies:\", error)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getSearchedMovie();\r\n    }, [query]);\r\n\r\n\r\n    // return (\r\n    //     <>\r\n    //         <div>\r\n    //             {(typeof movies === 'undefined' || movies === null) ?\r\n    //                 (<p>Loading...</p>) :\r\n    //                 (\r\n    //                     <div className=\"background_container\">\r\n    //                         <h2>Search Query: <b>{query}</b></h2>\r\n    //                         <div className=\"flex-container\">\r\n    //                             {movies.map((movie) => (\r\n    //                                 <div key={movie.id} className=\"movie_item\">\r\n    //                                     <img\r\n    //                                         src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\r\n    //                                         alt=\"movie poster\"\r\n    //                                         className=\"movie-poster\"\r\n    //                                     />\r\n\r\n    //                                     <div className=\"movie_name\">\r\n    //                                         <Link to={`/movies/${movie.id}`} className=\"movie-link\">\r\n    //                                             {movie.original_title ? movie.original_title : movie.name}\r\n    //                                         </Link>\r\n    //                                     </div>\r\n    //                                 </div>\r\n\r\n    //                             ))}\r\n    //                         </div>\r\n    //                         <div className=\"pagination\">\r\n    //                             <button\r\n    //                                 disabled={currentPage === 1}\r\n    //                                 onClick={() => setCurrentPage((prev) => prev - 1)}>Previous</button>\r\n    //                             <span>Page {currentPage} of {totalPages}</span>\r\n    //                             <button\r\n    //                                 disabled={currentPage === totalPages}\r\n    //                                 onClick={() => setCurrentPage((prev) => prev + 1)}>Next</button>\r\n    //                         </div>\r\n    //                     </div>\r\n\r\n    //                 )};\r\n\r\n    //         </div>\r\n    //     </>\r\n    // );\r\n};\r\nexport default MovieList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,IAAI,QAAQ,kBAAkB;AAGxD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,YAAY,CAAC,GAAGN,eAAe,CAAC,CAAC;EACxC,MAAMO,KAAK,GAAGD,YAAY,CAACE,GAAG,CAAC,OAAO,CAAC;EACvC,MAAM,CAACC,YAAY,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAClD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMc,WAAW,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,KAAK;IACpC,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMC,KAAK,CAAC,iBAAiBT,KAAK,EAAE,EAAE;QACnDU,MAAM,EAAE;UAAEV,KAAK;UAAEO;QAAK;MAC1B,CAAC,CAAC;MACFT,SAAS,CAACU,IAAI,CAACG,OAAO,CAAC;MACvBN,aAAa,CAACG,IAAI,CAACI,WAAW,CAAC;MAC/BT,cAAc,CAACK,IAAI,CAACN,YAAY,CAAC;IACrC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAID,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMP,KAAK,CAAC,iBAAiBT,KAAK,SAASiB,WAAW,EAAE,CAAC;MACtE,MAAMT,IAAI,GAAG,MAAMQ,IAAI,CAACE,IAAI,CAAC,CAAC;MAC9BpB,SAAS,CAACU,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACK,GAAG,CAAC,kCAAkC,EAAEN,KAAK,CAAC;IAC1D;EACJ,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACZwB,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;;EAGX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;AACJ,CAAC;AAACJ,EAAA,CA/EID,SAAS;EAAA,QAEYF,eAAe;AAAA;AAAA2B,EAAA,GAFpCzB,SAAS;AAgFf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}